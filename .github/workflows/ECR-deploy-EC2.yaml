name: Node.js ECR pipeline

on:
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    environment: main

    steps:
      # 1️⃣ Checkout the repo
      - name: Checkout code
        uses: actions/checkout@v3

      # 2️⃣ Setup Node.js
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      # 3️⃣ Install dependencies
      - name: Install dependencies
        run: npm install

      # 4️⃣ Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # 5️⃣ Login to ECR
      - name: Login to ECR
        run: |
          aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
          docker login --username AWS --password-stdin 123456789012.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com

      # 6️⃣ Build and tag Docker image
      - name: Build Docker image
        run: |
          docker build -t my-node-app:latest .
          docker tag my-node-app:latest 123456789012.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-node-app:latest

      # 7️⃣ Push Docker image to ECR
      - name: Push Docker image to ECR
        run: |
          docker push 123456789012.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-node-app:latest

      # 8️⃣ Deploy to EC2 via SSH
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Login to ECR from EC2
            aws ecr get-login-password --region ${{ secrets.AWS_REGION }} | \
            docker login --username AWS --password-stdin 123456789012.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com
            
            # Pull the latest image
            docker pull 123456789012.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-node-app:latest
            
            # Stop & remove old container if exists
            docker stop myapp || true && docker rm myapp || true
            
            # Run new container
            docker run -d --name myapp -p 3000:3000 123456789012.dkr.ecr.${{ secrets.AWS_REGION }}.amazonaws.com/my-node-app:latest
